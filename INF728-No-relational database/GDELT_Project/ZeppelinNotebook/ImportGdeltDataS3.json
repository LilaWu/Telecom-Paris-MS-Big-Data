{"paragraphs":[{"text":"%md ## GDELT Date\nGDELT Data are accessible through HTTP on a a list of CSV. the masterfilelist.txt\nThere is two links, \n* English master file: http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\n* Translingual masterfile: http://data.gdeltproject.org/gdeltv2/masterfilelist-translation.txt","user":"anonymous","dateUpdated":"2020-01-19T17:40:21+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>GDELT Date</h2>\n<p>GDELT Data are accessible through HTTP on a a list of CSV. the masterfilelist.txt<br/>There is two links,<br/>* English master file: <a href=\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\">http://data.gdeltproject.org/gdeltv2/masterfilelist.txt</a><br/>* Translingual masterfile: <a href=\"http://data.gdeltproject.org/gdeltv2/masterfilelist-translation.txt\">http://data.gdeltproject.org/gdeltv2/masterfilelist-translation.txt</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579455411131_-1297667652","id":"20200119-173651_376796950","dateCreated":"2020-01-19T17:36:51+0000","dateStarted":"2020-01-19T17:40:21+0000","dateFinished":"2020-01-19T17:40:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4739"},{"text":"%md We will download the data of december 2019.\nFirst the fileDownloader will download the masetfile from the url\n","user":"anonymous","dateUpdated":"2020-01-19T17:42:23+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We will download the data of december 2019.<br/>First the fileDownloader will download the masetfile from the url</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579455664436_-496707550","id":"20200119-174104_1193318789","dateCreated":"2020-01-19T17:41:04+0000","dateStarted":"2020-01-19T17:42:23+0000","dateFinished":"2020-01-19T17:42:23+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4740"},{"text":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\n\n\ndef fileDownloader(urlOfFileToDownload: String, fileName: String) = {\n    val url = new URL(urlOfFileToDownload)\n    val connection = url.openConnection().asInstanceOf[HttpURLConnection]\n    connection.setConnectTimeout(5000)\n    connection.setReadTimeout(5000)\n    connection.connect()\n\n    if (connection.getResponseCode >= 400)\n        println(\"error\")\n    else\n        url #> new File(fileName) !!\n}","user":"anonymous","dateUpdated":"2020-01-19T18:02:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one feature warning; re-run with -feature for details\nimport sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection\nimport org.apache.spark.sql.functions._\nfileDownloader: (urlOfFileToDownload: String, fileName: String)Any\n"}]},"apps":[],"jobName":"paragraph_1579454429047_-211741388","id":"20181209-161931_737140067","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:02:38+0000","dateFinished":"2020-01-19T18:02:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4741"},{"text":"%md First we download the masterfile on our local machine","user":"anonymous","dateUpdated":"2020-01-19T17:46:16+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1579455940916_-925653831","id":"20200119-174540_1138865485","dateCreated":"2020-01-19T17:45:40+0000","dateStarted":"2020-01-19T17:46:16+0000","dateFinished":"2020-01-19T17:46:16+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4742"},{"text":"fileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\", \"/tmp/masterfilelist.txt\") // save the list file to the Spark Master\nfileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist-translation.txt\", \"/tmp/masterfilelist-translation.txt\")","user":"anonymous","dateUpdated":"2020-01-19T18:02:56+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res2: Any = \"\"\n"}]},"apps":[],"jobName":"paragraph_1579455979443_-2053473553","id":"20200119-174619_393553883","dateCreated":"2020-01-19T17:46:19+0000","dateStarted":"2020-01-19T18:02:56+0000","dateFinished":"2020-01-19T18:03:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4743"},{"text":"%md\nWe will upload the *masterfilelist.txt* in our S3 bucket with the help of the scala AWS api","user":"anonymous","dateUpdated":"2020-01-19T17:44:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We will upload the <em>masterfilelist.txt</em> in our S3 bucket with the help of the scala AWS api</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579454429052_-9564800","id":"20181212-101200_46908780","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T17:44:14+0000","dateFinished":"2020-01-19T17:44:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4744"},{"text":"import com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.auth.BasicSessionCredentials\n\nval AWS_ID = \"TODO\"\nval AWS_KEY = \"TODO\"\nval AWS_TOKEN = \"TODO\"\nval s3_name = \"TODO\"\n\n// la classe AmazonS3Client n'est pas serializable\n// on rajoute l'annotation @transient pour dire a Spark de ne pas essayer de serialiser cette classe et l'envoyer aux executeurs\n@transient val awsClient = new AmazonS3Client(new BasicSessionCredentials(AWS_ID, AWS_KEY, AWS_TOKEN) )\n\nsc.hadoopConfiguration.set(\"fs.s3a.aws.credentials.provider\", \"org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider\") //Indique que l'on a une session et nous un compte classique AWS\nsc.hadoopConfiguration.set(\"fs.s3a.access.key\", AWS_ID) // mettre votre ID du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.secret.key\", AWS_KEY) // mettre votre secret du fichier credentials.csv\nsc.hadoopConfiguration.set(\"fs.s3a.session.token\", AWS_TOKEN) //le token de la session\n\nawsClient.putObject(s3_name, \"masterfilelist.txt\", new File( \"/tmp/masterfilelist.txt\") )\nawsClient.putObject(s3_name, \"masterfilelist-translation.txt\", new File( \"/tmp/masterfilelist-translation.txt\") )\n","user":"anonymous","dateUpdated":"2020-01-19T18:41:35+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\ncom.amazonaws.services.s3.model.AmazonS3Exception: The AWS Access Key Id you provided does not exist in our records. (Service: Amazon S3; Status Code: 403; Error Code: InvalidAccessKeyId; Request ID: 8CEDEED67F776A05; S3 Extended Request ID: 4NHJXOeciK7qoExbDPE+r7pQoIp6FGnobOa7zd0pssJ9tQLqyRr9eME/RN1P9JuFiKQ/yQudgbI=)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.handleErrorResponse(AmazonHttpClient.java:1712)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1367)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:1113)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:770)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:744)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:726)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$500(AmazonHttpClient.java:686)\n  at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:668)\n  at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:532)\n  at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:512)\n  at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4926)\n  at com.amazonaws.services.s3.AmazonS3Client.invoke(AmazonS3Client.java:4872)\n  at com.amazonaws.services.s3.AmazonS3Client.access$300(AmazonS3Client.java:390)\n  at com.amazonaws.services.s3.AmazonS3Client$PutObjectStrategy.invokeServiceCall(AmazonS3Client.java:5806)\n  at com.amazonaws.services.s3.AmazonS3Client.uploadObject(AmazonS3Client.java:1794)\n  at com.amazonaws.services.s3.AmazonS3Client.putObject(AmazonS3Client.java:1754)\n  at com.amazonaws.services.s3.AmazonS3Client.putObject(AmazonS3Client.java:1685)\n  ... 57 elided\n"}]},"apps":[],"jobName":"paragraph_1579454429054_-1995221192","id":"20181212-095117_1356104178","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:41:35+0000","dateFinished":"2020-01-19T18:41:36+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:4745"},{"text":"%md Verifions que le fichier a bien ete uploade dans le bucket S3 via un dataframe Spark","user":"anonymous","dateUpdated":"2020-01-19T17:20:29+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Verifions que le fichier a bien ete uploade dans le bucket S3 via un dataframe Spark</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579454429054_674622726","id":"20181212-101258_954978327","dateCreated":"2020-01-19T17:20:29+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4746"},{"text":"import org.apache.spark.sql.SQLContext\n\nval sqlContext = new SQLContext(sc)\nval filesDF = sqlContext.read.\n                    option(\"delimiter\",\" \").\n                    option(\"infer_schema\",\"true\").\n                    csv(\"s3://\"+s3_name+\"/masterfilelist.txt\").\n                    withColumnRenamed(\"_c0\",\"size\").\n                    withColumnRenamed(\"_c1\",\"hash\").\n                    withColumnRenamed(\"_c2\",\"url\")\n                \nval filesDFTranslation = sqlContext.read.\n                    option(\"delimiter\",\" \").\n                    option(\"infer_schema\",\"true\").\n                    csv(\"s3://\"+s3_name+\"/masterfilelist-translation.txt\").\n                    withColumnRenamed(\"_c0\",\"size\").\n                    withColumnRenamed(\"_c1\",\"hash\").\n                    withColumnRenamed(\"_c2\",\"url\")\n                    \nval allFileDf = filesDF.union(filesDFTranslation).cache\n                    \n                    ","user":"anonymous","dateUpdated":"2020-01-19T18:04:58+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\nimport org.apache.spark.sql.SQLContext\nsqlContext: org.apache.spark.sql.SQLContext = org.apache.spark.sql.SQLContext@58eb3acb\nfilesDF: org.apache.spark.sql.DataFrame = [size: string, hash: string ... 1 more field]\nfilesDFTranslation: org.apache.spark.sql.DataFrame = [size: string, hash: string ... 1 more field]\nallFileDf: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579454429055_-1768297640","id":"20181209-163052_14263535","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:04:58+0000","dateFinished":"2020-01-19T18:05:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4747"},{"text":"allFileDf.show(false)","user":"anonymous","dateUpdated":"2020-01-19T18:05:10+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------+--------------------------------+--------------------------------------------------------------------+\n|size    |hash                            |url                                                                 |\n+--------+--------------------------------+--------------------------------------------------------------------+\n|150383  |297a16b493de7cf6ca809a7cc31d0b93|http://data.gdeltproject.org/gdeltv2/20150218230000.export.CSV.zip  |\n|318084  |bb27f78ba45f69a17ea6ed7755e9f8ff|http://data.gdeltproject.org/gdeltv2/20150218230000.mentions.CSV.zip|\n|10768507|ea8dde0beb0ba98810a92db068c0ce99|http://data.gdeltproject.org/gdeltv2/20150218230000.gkg.csv.zip     |\n|149211  |2a91041d7e72b0fc6a629e2ff867b240|http://data.gdeltproject.org/gdeltv2/20150218231500.export.CSV.zip  |\n|339037  |dec3f427076b716a8112b9086c342523|http://data.gdeltproject.org/gdeltv2/20150218231500.mentions.CSV.zip|\n|10269336|2f1a504a3c4558694ade0442e9a5ae6f|http://data.gdeltproject.org/gdeltv2/20150218231500.gkg.csv.zip     |\n|149723  |12268e821823aae2da90882621feda18|http://data.gdeltproject.org/gdeltv2/20150218233000.export.CSV.zip  |\n|357229  |744acad14559f2781a8db67715d63872|http://data.gdeltproject.org/gdeltv2/20150218233000.mentions.CSV.zip|\n|11279827|66b03e2efd7d51dabf916b1666910053|http://data.gdeltproject.org/gdeltv2/20150218233000.gkg.csv.zip     |\n|158842  |a5298ce3c6df1a8a759c61b5c0b6f8bb|http://data.gdeltproject.org/gdeltv2/20150218234500.export.CSV.zip  |\n|374528  |dd322c888f28311aca2c735468405551|http://data.gdeltproject.org/gdeltv2/20150218234500.mentions.CSV.zip|\n|11212939|cd20f295649b214dd16666ca451b9994|http://data.gdeltproject.org/gdeltv2/20150218234500.gkg.csv.zip     |\n|362610  |c4268d558bb22c02b3c132c17818c68b|http://data.gdeltproject.org/gdeltv2/20150219000000.export.CSV.zip  |\n|287807  |e7f464a7a451ad2af6e9c8fa24f0ccea|http://data.gdeltproject.org/gdeltv2/20150219000000.mentions.CSV.zip|\n|9728953 |8f4b26e134bd6605cce2d32e92e5d3d7|http://data.gdeltproject.org/gdeltv2/20150219000000.gkg.csv.zip     |\n|251605  |7685a6c71f010918f3be0d4ed2be977e|http://data.gdeltproject.org/gdeltv2/20150219001500.export.CSV.zip  |\n|263793  |e23ee65a60a1577dc74b979a54da406e|http://data.gdeltproject.org/gdeltv2/20150219001500.mentions.CSV.zip|\n|9459370 |6031464dfdcb331551d491916d400c18|http://data.gdeltproject.org/gdeltv2/20150219001500.gkg.csv.zip     |\n|255259  |f41066efb05d4024fca9dc1c2c6b9112|http://data.gdeltproject.org/gdeltv2/20150219003000.export.CSV.zip  |\n|308019  |061133d1efd29c66c7ecba0d52063927|http://data.gdeltproject.org/gdeltv2/20150219003000.mentions.CSV.zip|\n+--------+--------------------------------+--------------------------------------------------------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1579454429056_1683528782","id":"20181209-185148_142944415","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:05:10+0000","dateFinished":"2020-01-19T18:05:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4748"},{"text":"%md We will only use the file corresponding to december 2019","user":"anonymous","dateUpdated":"2020-01-19T17:51:47+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We will only use the file corresponding to december 2019</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579454429058_1878780432","id":"20181212-101345_616653479","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T17:51:47+0000","dateFinished":"2020-01-19T17:51:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4749"},{"text":"val sampleDF = allFileDf.filter(col(\"url\").contains(\"/201912\")).cache\n\n","user":"anonymous","dateUpdated":"2020-01-19T18:05:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"sampleDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [size: string, hash: string ... 1 more field]\n"}]},"apps":[],"jobName":"paragraph_1579454429060_-663215222","id":"20181209-162427_816541907","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:05:32+0000","dateFinished":"2020-01-19T18:05:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4750"},{"text":"sampleDF.show(false)","user":"anonymous","dateUpdated":"2020-01-19T18:05:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+--------------------------------+--------------------------------------------------------------------+\n|size   |hash                            |url                                                                 |\n+-------+--------------------------------+--------------------------------------------------------------------+\n|93931  |0705b8174820e6f3b29a5f47dca9eec3|http://data.gdeltproject.org/gdeltv2/20191201000000.export.CSV.zip  |\n|72243  |935eed9697792ae39af8e20e54f1e115|http://data.gdeltproject.org/gdeltv2/20191201000000.mentions.CSV.zip|\n|3771009|65973ccd2b5a00c1814e61e5fc7a56e2|http://data.gdeltproject.org/gdeltv2/20191201000000.gkg.csv.zip     |\n|67498  |182735b0b4f0adf48e97e118f4ff6ac8|http://data.gdeltproject.org/gdeltv2/20191201001500.export.CSV.zip  |\n|73760  |75ff29f86a652629cfa3bfd3e5d94f36|http://data.gdeltproject.org/gdeltv2/20191201001500.mentions.CSV.zip|\n|4018182|9bc73d2de5fbd416431ed6b4cf456d0f|http://data.gdeltproject.org/gdeltv2/20191201001500.gkg.csv.zip     |\n|109391 |5ac21ced99ce7ff7e2fd6786ef10d8fb|http://data.gdeltproject.org/gdeltv2/20191201003000.export.CSV.zip  |\n|100508 |014ceb28f2d0d7a6e5c3305a2f576e8f|http://data.gdeltproject.org/gdeltv2/20191201003000.mentions.CSV.zip|\n|5130928|4ced5692a90c3ea497e9804fc23e449d|http://data.gdeltproject.org/gdeltv2/20191201003000.gkg.csv.zip     |\n|80251  |255d61437a9a69afa01b120e08177f0a|http://data.gdeltproject.org/gdeltv2/20191201004500.export.CSV.zip  |\n|88701  |a7735f31b25438dfc23f8a44ba473abe|http://data.gdeltproject.org/gdeltv2/20191201004500.mentions.CSV.zip|\n|4059844|7ececfe31f61e0e2f2c2fa0a96546a99|http://data.gdeltproject.org/gdeltv2/20191201004500.gkg.csv.zip     |\n|60708  |e3e03f3f5661d6d5cf1f7bb6e94bb9e1|http://data.gdeltproject.org/gdeltv2/20191201010000.export.CSV.zip  |\n|80094  |f34d9d66aa0669c26dc112dfa4c7d8bc|http://data.gdeltproject.org/gdeltv2/20191201010000.mentions.CSV.zip|\n|3993343|08e7678c339b7c7fc8e50ff378f5a2ac|http://data.gdeltproject.org/gdeltv2/20191201010000.gkg.csv.zip     |\n|77830  |a93ab9674218032b8772f30a16ab5a84|http://data.gdeltproject.org/gdeltv2/20191201011500.export.CSV.zip  |\n|93203  |2846a097adf0c94fb30fa3671f7d1809|http://data.gdeltproject.org/gdeltv2/20191201011500.mentions.CSV.zip|\n|3997598|7de8500e9d7d4c6da232b914171a0509|http://data.gdeltproject.org/gdeltv2/20191201011500.gkg.csv.zip     |\n|56655  |cdfd4d397b53f1aa06e5ff2bf332d88f|http://data.gdeltproject.org/gdeltv2/20191201013000.export.CSV.zip  |\n|71371  |318ec5258005d680258b608b43579d40|http://data.gdeltproject.org/gdeltv2/20191201013000.mentions.CSV.zip|\n+-------+--------------------------------+--------------------------------------------------------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1579454429061_-1883126290","id":"20181209-184529_2045997321","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:05:37+0000","dateFinished":"2020-01-19T18:05:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4751"},{"text":"%md We willupload all files to the S3 bucket with an ETL Spark:","user":"anonymous","dateUpdated":"2020-01-19T18:06:14+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We willupload all files to the S3 bucket with an ETL Spark:</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579454429062_-557921602","id":"20181212-101426_1390220831","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:06:14+0000","dateFinished":"2020-01-19T18:06:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4752"},{"text":"object AwsClient{\n    val s3 = new AmazonS3Client(new BasicSessionCredentials(AWS_ID, AWS_KEY, AWS_TOKEN))\n}\n\n\nsampleDF.select(\"url\").repartition(100).foreach( r=> {\n            val URL = r.getAs[String](0)\n            val fileName = r.getAs[String](0).split(\"/\").last\n            val dir = \"/tmp/\"\n            val localFileName = dir + fileName\n            fileDownloader(URL,  localFileName)\n            val localFile = new File(localFileName)\n            AwsClient.s3.putObject(s3_name, fileName, localFile )\n            localFile.delete()\n            \n})","user":"anonymous","dateUpdated":"2020-01-19T18:09:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"warning: there was one deprecation warning; re-run with -deprecation for details\ndefined object AwsClient\n"}]},"apps":[],"jobName":"paragraph_1579454429063_1394796490","id":"20181209-163933_1336720866","dateCreated":"2020-01-19T17:20:29+0000","dateStarted":"2020-01-19T18:09:13+0000","dateFinished":"2020-01-19T18:27:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4753"},{"text":"%md You can verify your data was imported correctly with:\n\n`aws s3 ls --summarize --human-readable --recursive s3://s3_name/ `","user":"anonymous","dateUpdated":"2020-01-19T17:58:19+0000","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>You can verify your data was imported correctly with:</p>\n<p><code>aws s3 ls --summarize --human-readable --recursive s3://s3_name/</code></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1579456623125_328618694","id":"20200119-175703_1333455711","dateCreated":"2020-01-19T17:57:03+0000","dateStarted":"2020-01-19T17:58:19+0000","dateFinished":"2020-01-19T17:58:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4754"}],"name":"ImportGdeltDataS3","id":"2EYGJJ128","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}